# ~/database/postgresql-local/docker-compose.yml
# A robust, root-free PostgreSQL setup with a custom network to prevent conflicts.

version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: postgres_local_dev
    restart: unless-stopped

    # Security: Binds the database port 5432 to your machine's 'localhost' only.
    # This prevents any other computer on your network from accessing the database.
    ports:
      - "5432:5432"

    # Data Persistence: Maps the 'data' folder to the container's data directory.
    # This ensures your database is saved on your computer.
    volumes:
      - ./data:/var/lib/postgresql/data

    # Secure Password: Tells PostgreSQL to get its password from the secret file.
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres

    # Makes the password file available inside the container.
    secrets:
      - postgres_password

    # Health Check: Docker will use this to ensure the database is running correctly.
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

    # Conflict-Free Network: Connects this service to our custom network.
    networks:
      - postgres-net

secrets:
  postgres_password:
    file: ./secrets/postgres_password

# Custom Network Definition to Avoid Conflicts
# Creates a dedicated network to prevent issues with VPNs or other services.
networks:
  postgres-net:
    driver: bridge
    ipam:
      driver: default
      config:
        # We define a subnet in the 10.x.x.x range, which is very unlikely to conflict.
        - subnet: "10.55.0.0/24"
