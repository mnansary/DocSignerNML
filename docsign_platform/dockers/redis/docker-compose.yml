# ~/database/redis-local/docker-compose.yml
# A simple, root-free Redis setup with a custom network to prevent conflicts.

version: '3.8'

services:
  redis:
    # Use the official lightweight Redis image
    image: redis:7-alpine
    container_name: redis_local_dev
    restart: unless-stopped

    # Security: Binds the Redis port 6379 to your machine's 'localhost' only.
    # This prevents any other computer on your network from accessing it.
    ports:
      - "6379:6379"

    # Data Persistence: Maps the 'data' folder to the container's data directory.
    # This ensures your data is saved on your computer.
    volumes:
      - ./data:/data

    # Health Check: Docker will use this to ensure Redis is running correctly.
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

    # Conflict-Free Network: Connects this service to our custom network.
    networks:
      - redis-net

# Custom Network Definition to Avoid Conflicts
# Creates a dedicated network to prevent issues with VPNs or other services.
networks:
  redis-net:
    driver: bridge
    ipam:
      driver: default
      config:
        # We define a subnet in the 10.x.x.x range, which is very unlikely to conflict.
        - subnet: "10.56.0.0/24"